document.addEventListener('DOMContentLoaded', function () {    const signupForm = document.getElementById('signup-form');    const inputs = {        faculty_num: document.getElementById('faculty_num'),        email: document.getElementById('email'),        contact: document.getElementById('contact'),        username: document.getElementById('username'),        password: document.getElementById('password'),        conpwd: document.getElementById('conpwd')    };    const errorMessages = {        faculty_num: document.getElementById('faculty_num-error'),        email: document.getElementById('email-error'),        contact: document.getElementById('contact-error'),        username: document.getElementById('username-error'),        password: document.getElementById('password-error'),        conpwd: document.getElementById('conpwd-error')    };    const validateField = (field, message) => {        if (!field.value.trim()) {            errorMessages[field.id].textContent = message;            errorMessages[field.id].style.display = 'block';            return false;        }        errorMessages[field.id].textContent = '';        errorMessages[field.id].style.display = 'none';        return true;    };    const validateEmail = () => {        const emailRegex = /^(([^<>()[\\].,;:\s@"]+(\.[^<>()[\\].,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;        if (!emailRegex.test(inputs.email.value)) {            errorMessages.email.textContent = 'Please enter a valid email address.';            errorMessages.email.style.display = 'block';            return false;        }        errorMessages.email.textContent = '';        errorMessages.email.style.display = 'none';        return true;    };    const validatePassword = () => {        if (inputs.password.value.length < 8) {            errorMessages.password.textContent = 'Password must be at least 8 characters long.';            errorMessages.password.style.display = 'block';            return false;        }        errorMessages.password.textContent = '';        errorMessages.password.style.display = 'none';        return true;    };    const validateConfirmPassword = () => {        if (inputs.password.value !== inputs.conpwd.value) {            errorMessages.conpwd.textContent = 'Passwords do not match.';            errorMessages.conpwd.style.display = 'block';            return false;        }        errorMessages.conpwd.textContent = '';        errorMessages.conpwd.style.display = 'none';        return true;    };    if (signupForm) {        signupForm.addEventListener('submit', function (event) {            let isValid = true;            isValid = validateField(inputs.faculty_num, 'Faculty number is required.') && isValid;            isValid = validateField(inputs.email, 'Email is required.') && isValid;            isValid = validateField(inputs.contact, 'Contact number is required.') && isValid;            isValid = validateField(inputs.username, 'Username is required.') && isValid;            isValid = validateField(inputs.password, 'Password is required.') && isValid;            isValid = validateField(inputs.conpwd, 'Please confirm your password.') && isValid;            if (isValid) { // Only check these if the basic checks passed                isValid = validateEmail() && isValid;                isValid = validatePassword() && isValid;                isValid = validateConfirmPassword() && isValid;            }            if (!isValid) {                event.preventDefault(); // Prevent form submission            }        });        // Add real-time validation as the user types        for (const key in inputs) {            inputs[key].addEventListener('keyup', () => {                if (key === 'email') {                    validateEmail();                } else if (key === 'password') {                    validatePassword();                } else if (key === 'conpwd') {                    validateConfirmPassword();                } else {                    validateField(inputs[key], `${key.replace('_', ' ')} is required.`);                }            });        }    }});} 